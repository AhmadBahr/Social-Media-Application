{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATTO\\\\Desktop\\\\New folder\\\\Social-Media-Application\\\\client\\\\src\\\\scenes\\\\widgets\\\\FriendListWidget.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { Box, Typography, useTheme } from \"@mui/material\";\nimport WidgetWrapper from \"components/WidgetWrapper\";\nimport { useEffect, useNavigate } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFriends } from \"state\";\nimport { Avatar, AvatarBadge, AvatarGroup } from '@chakra-ui/react';\nimport FlexBetween from \"../../components/FlexBetween\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Friend = ({\n  friendId,\n  name,\n  subtitle,\n  userPicturePath\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    palette\n  } = useTheme();\n  const primaryLight = palette.primary.light;\n  const primaryDark = palette.primary.dark;\n  const main = palette.neutral.main;\n  const medium = palette.neutral.medium;\n  return /*#__PURE__*/_jsxDEV(FlexBetween, {\n    children: [/*#__PURE__*/_jsxDEV(AvatarGroup, {\n      size: \"md\",\n      max: 2,\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        name: name,\n        src: userPicturePath,\n        size: \"md\",\n        onClick: () => {\n          navigate(`/profile/${friendId}`);\n          navigate(0);\n        },\n        cursor: \"pointer\",\n        children: /*#__PURE__*/_jsxDEV(AvatarBadge, {\n          boxSize: \"1em\",\n          bg: \"green.500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => {\n        navigate(`/profile/${friendId}`);\n        navigate(0);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: main,\n        variant: \"h5\",\n        fontWeight: \"500\",\n        sx: {\n          \"&:hover\": {\n            color: palette.primary.light,\n            cursor: \"pointer\"\n          }\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: medium,\n        fontSize: \"0.75rem\",\n        children: subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Friend, \"21D7XD5DndTZqX0yK64+zmF+2PU=\", false, function () {\n  return [useNavigate, useTheme];\n});\n_c = Friend;\nconst FriendListWidget = ({\n  userId\n}) => {\n  _s2();\n  const dispatch = useDispatch();\n  const {\n    palette\n  } = useTheme();\n  const token = useSelector(state => state.token);\n  const friends = useSelector(state => state.user.friends);\n\n  // Mock data for three friends\n  const mockFriends = [{\n    _id: \"1\",\n    firstName: \"John\",\n    lastName: \"Doe\",\n    occupation: \"Software Engineer\",\n    src: \"https://bit.ly/dan-abramov\"\n  }, {\n    _id: \"2\",\n    firstName: \"Jane\",\n    lastName: \"Doe\",\n    occupation: \"Graphic Designer\",\n    src: \"https://bit.ly/tioluwani-kolawole\"\n  }, {\n    _id: \"3\",\n    firstName: \"Alice\",\n    lastName: \"Smith\",\n    occupation: \"Data Scientist\",\n    src: \"https://bit.ly/kent-c-dodds\"\n  }];\n  const getFriends = async () => {\n    dispatch(setFriends({\n      friends: mockFriends\n    }));\n  };\n  useEffect(() => {\n    getFriends();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(WidgetWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      color: palette.neutral.dark,\n      variant: \"h5\",\n      fontWeight: \"500\",\n      sx: {\n        mb: \"1.5rem\"\n      },\n      children: \"Friend List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"1.5rem\",\n      children: friends.map(friend => /*#__PURE__*/_jsxDEV(Friend, {\n        friendId: friend._id,\n        name: `${friend.firstName} ${friend.lastName}`,\n        subtitle: friend.occupation,\n        userPicturePath: friend.src\n      }, friend._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s2(FriendListWidget, \"wBorfTpf09wby8S5yWBW9rvMuVk=\", false, function () {\n  return [useDispatch, useTheme, useSelector, useSelector];\n});\n_c2 = FriendListWidget;\nexport default FriendListWidget;\nvar _c, _c2;\n$RefreshReg$(_c, \"Friend\");\n$RefreshReg$(_c2, \"FriendListWidget\");","map":{"version":3,"names":["Box","Typography","useTheme","WidgetWrapper","useEffect","useNavigate","useDispatch","useSelector","setFriends","Avatar","AvatarBadge","AvatarGroup","FlexBetween","jsxDEV","_jsxDEV","Friend","friendId","name","subtitle","userPicturePath","_s","navigate","palette","primaryLight","primary","light","primaryDark","dark","main","neutral","medium","children","size","max","src","onClick","cursor","boxSize","bg","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","fontWeight","sx","fontSize","_c","FriendListWidget","userId","_s2","dispatch","token","state","friends","user","mockFriends","_id","firstName","lastName","occupation","getFriends","mb","display","flexDirection","gap","map","friend","_c2","$RefreshReg$"],"sources":["C:/Users/ATTO/Desktop/New folder/Social-Media-Application/client/src/scenes/widgets/FriendListWidget.jsx"],"sourcesContent":["import { Box, Typography, useTheme } from \"@mui/material\";\r\nimport WidgetWrapper from \"components/WidgetWrapper\";\r\nimport { useEffect, useNavigate } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setFriends } from \"state\";\r\nimport { Avatar, AvatarBadge, AvatarGroup } from '@chakra-ui/react'\r\nimport FlexBetween from \"../../components/FlexBetween\";\r\n\r\nconst Friend = ({ friendId, name, subtitle, userPicturePath }) => {\r\n  const navigate = useNavigate();\r\n  const { palette } = useTheme();\r\n  const primaryLight = palette.primary.light;\r\n  const primaryDark = palette.primary.dark;\r\n  const main = palette.neutral.main;\r\n  const medium = palette.neutral.medium;\r\n\r\n  return (\r\n    <FlexBetween>\r\n      <AvatarGroup size=\"md\" max={2}>\r\n        <Avatar\r\n          name={name}\r\n          src={userPicturePath}\r\n          size=\"md\"\r\n          onClick={() => {\r\n            navigate(`/profile/${friendId}`);\r\n            navigate(0);\r\n          }}\r\n          cursor=\"pointer\"\r\n        >\r\n          <AvatarBadge boxSize=\"1em\" bg=\"green.500\" />\r\n        </Avatar>\r\n      </AvatarGroup>\r\n      <Box\r\n        onClick={() => {\r\n          navigate(`/profile/${friendId}`);\r\n          navigate(0);\r\n        }}\r\n      >\r\n        <Typography\r\n          color={main}\r\n          variant=\"h5\"\r\n          fontWeight=\"500\"\r\n          sx={{\r\n            \"&:hover\": {\r\n              color: palette.primary.light,\r\n              cursor: \"pointer\",\r\n            },\r\n          }}\r\n        >\r\n          {name}\r\n        </Typography>\r\n        <Typography color={medium} fontSize=\"0.75rem\">\r\n          {subtitle}\r\n        </Typography>\r\n      </Box>\r\n    </FlexBetween>\r\n  );\r\n};\r\n\r\nconst FriendListWidget = ({ userId }) => {\r\n  const dispatch = useDispatch();\r\n  const { palette } = useTheme();\r\n  const token = useSelector((state) => state.token);\r\n  const friends = useSelector((state) => state.user.friends);\r\n\r\n  // Mock data for three friends\r\n  const mockFriends = [\r\n    {\r\n      _id: \"1\",\r\n      firstName: \"John\",\r\n      lastName: \"Doe\",\r\n      occupation: \"Software Engineer\",\r\n      src: \"https://bit.ly/dan-abramov\",\r\n    },\r\n    {\r\n      _id: \"2\",\r\n      firstName: \"Jane\",\r\n      lastName: \"Doe\",\r\n      occupation: \"Graphic Designer\",\r\n      src: \"https://bit.ly/tioluwani-kolawole\",\r\n    },\r\n    {\r\n      _id: \"3\",\r\n      firstName: \"Alice\",\r\n      lastName: \"Smith\",\r\n      occupation: \"Data Scientist\",\r\n      src: \"https://bit.ly/kent-c-dodds\",\r\n    },\r\n  ];\r\n\r\n  const getFriends = async () => {\r\n    dispatch(setFriends({ friends: mockFriends }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFriends();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <WidgetWrapper>\r\n      <Typography\r\n        color={palette.neutral.dark}\r\n        variant=\"h5\"\r\n        fontWeight=\"500\"\r\n        sx={{ mb: \"1.5rem\" }}\r\n      >\r\n        Friend List\r\n      </Typography>\r\n      <Box display=\"flex\" flexDirection=\"column\" gap=\"1.5rem\">\r\n        {friends.map((friend) => (\r\n          <Friend\r\n            key={friend._id}\r\n            friendId={friend._id}\r\n            name={`${friend.firstName} ${friend.lastName}`}\r\n            subtitle={friend.occupation}\r\n            userPicturePath={friend.src}\r\n          />\r\n        ))}\r\n      </Box>\r\n    </WidgetWrapper>\r\n  );\r\n};\r\n\r\nexport default FriendListWidget;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}